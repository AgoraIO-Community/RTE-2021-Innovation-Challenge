def safeExtGet(prop, key, fallback) {
    if (rootProject.ext.has(prop)) {
        def map = rootProject.ext.get(prop)
        if (map.containsKey(key)) {
            return map.get(key)
        }
    }
    return fallback
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion safeExtGet('android', 'compileSdkVersion', 29)
    buildToolsVersion safeExtGet('android', 'buildToolsVersion', '29.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('android', 'minSdkVersion', 19)
        targetSdkVersion safeExtGet('android', 'minSdkVersion', 29)
        versionCode 1
        versionName "1.0.0"

        consumerProguardFiles 'consumer-rules.pro'

        /**可配置项*/
        buildConfigField 'String', 'SDK_VERSION', '"101"'
        buildConfigField 'String', 'API_BASE_URL', '"https://api.agora.io"'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    kotlinOptions { jvmTarget = 1.8 }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    api project(path: ':rte')
    api project(':log')
}
