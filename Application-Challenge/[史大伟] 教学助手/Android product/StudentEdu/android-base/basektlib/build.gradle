apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
configurations {
    ktlint
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }


    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        testInstrumentationRunner rootProject.ext.dependencies.androidJUnitRunner
        versionCode 1
        versionName "1.0"

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    ktlint rootProject.ext.dependencies.tools.ktlint
    api fileTree(dir: "libs", include: ["*.jar"])
    api rootProject.ext.dependencies.kotlin.kotlin_stdlib
    api rootProject.ext.dependencies.androidx.core
    api rootProject.ext.dependencies.androidx.appcompat

    testImplementation rootProject.ext.dependencies.test.junit
    androidTestImplementation rootProject.ext.dependencies.test.runner
    androidTestImplementation rootProject.ext.dependencies.test.espresso_core

    api rootProject.ext.dependencies.androidx.constraintlayout
    api rootProject.ext.dependencies.androidx.legacy_support_v4
    api rootProject.ext.dependencies.androidx.appcompat
    api rootProject.ext.dependencies.androidx.recyclerview
    kapt rootProject.ext.dependencies.androidx.annotation
    kapt rootProject.ext.dependencies.lifecycle.lifecycle_extensions

    api rootProject.ext.dependencies.lifecycle.lifecycle_viewmodel_ktx
    api rootProject.ext.dependencies.lifecycle.lifecycle_livedata_ktx
    api rootProject.ext.dependencies.androidx.fragment_ktx

    api rootProject.ext.dependencies.androidx.multidex
    api rootProject.ext.dependencies.androidx.material
    api rootProject.ext.dependencies.arouter.arouter_api

    //日志
    implementation rootProject.ext.dependencies.tools.logger

    api rootProject.ext.dependencies.reactivex.rxjava
    api rootProject.ext.dependencies.reactivex.rxandroid

    api rootProject.ext.dependencies.trello.rxlifecycle2
    api rootProject.ext.dependencies.trello.rxlifecycle2_android

    api rootProject.ext.dependencies.tbruyelle.rxpermissions2
    implementation rootProject.ext.dependencies.okhttp.okhttp3

    implementation rootProject.ext.dependencies.okhttp.okio
    api (rootProject.ext.dependencies.retrofit.retrofit2){
        exclude group: 'com.squareup.okhttp3'
    }
    api rootProject.ext.dependencies.retrofit.converter_gson
    api (rootProject.ext.dependencies.retrofit.converter_mosh){
        exclude group: 'com.squareup.okio'
    }
    api rootProject.ext.dependencies.retrofit.converter_scalars

    kapt rootProject.ext.dependencies.tools.moshi_kotlin_codegen
    api rootProject.ext.dependencies.tools.moshi
    api rootProject.ext.dependencies.tools.autodispose
    api rootProject.ext.dependencies.tools.autodispose_android_archcomponents

    api rootProject.ext.dependencies.butterknife.butterknife
    kapt rootProject.ext.dependencies.butterknife.butterknife_compiler

    api rootProject.ext.dependencies.glide.glide

//    api rootProject.ext.dependencies.glide.okhttp3_integration
    api (rootProject.ext.dependencies.glide.okhttp3_integration) {
        exclude group: 'com.squareup.okhttp3'
    }
    kapt rootProject.ext.dependencies.glide.compiler
    implementation rootProject.ext.dependencies.tools.disklrucache
    debugImplementation rootProject.ext.dependencies.tools.leakcanary_android

    implementation rootProject.ext.dependencies.tencent.mmkv_static
//    协程
    api rootProject.ext.dependencies.tools.kotlinx_coroutines_core
    api rootProject.ext.dependencies.tools.kotlinx_coroutines_core_android

//    implementation rootProject.ext.dependencies.retrofit.retrofit2_kotlin_coroutines_adapter
    // koin 依赖注入
    api rootProject.ext.dependencies.koin.koin_android
    api rootProject.ext.dependencies.koin.koin_viewmodel
    // 可使用协程并可以观察生命周期的ViewModel
    api rootProject.ext.dependencies.lifecycle.lifecycle_viewmodel_ktx

    api rootProject.ext.dependencies.cymchad.recycler_view_adapter_helper
    api rootProject.ext.dependencies.scwang.layout_kernel
    api rootProject.ext.dependencies.scwang.header_classics
    api rootProject.ext.dependencies.scwang.footer_classics

    api rootProject.ext.dependencies.room.room_runtime
    api rootProject.ext.dependencies.room.room_ktx
    kapt rootProject.ext.dependencies.room.room_compiler

    //沉浸式状态栏
    // 基础依赖包，必须要依赖
    api rootProject.ext.dependencies.immersionbar.immersionbar
    // fragment快速实现（可选）
    api rootProject.ext.dependencies.immersionbar.immersionbar_components
    api rootProject.ext.dependencies.liulishuo.okdownload
    api rootProject.ext.dependencies.liulishuo.okdownload_sqlite
    api (rootProject.ext.dependencies.liulishuo.okdownload_okhttp) {
        exclude group: 'com.squareup.okhttp3'
    }
    api rootProject.ext.dependencies.glide.glide_transformations
    //缓存
    api rootProject.ext.dependencies.video.videocache
    implementation (rootProject.ext.dependencies.alicloud.alicloud_android_httpdns) {
        transitive true
        exclude group: 'com.aliyun.ams', module: 'alicloud-android-utdid'
    }
    implementation rootProject.ext.dependencies.alicloud.alicloud_android_utdid
    //圆形图片
    api rootProject.ext.dependencies.widgets.roundedimageview
    //自动尺寸
    implementation rootProject.ext.dependencies.tools.autosize
    api rootProject.ext.dependencies.tools.autopage

    api rootProject.ext.dependencies.immersionbar.immersionbar_ktx
    implementation rootProject.ext.dependencies.okhttp.cookiejar
    debugImplementation rootProject.ext.dependencies.tools.simpleinterceptor_debug
    releaseImplementation rootProject.ext.dependencies.tools.simpleinterceptor_release

}
task ktlint(type: JavaExec, group: "verification") {
    description = "检查kotlin 风格"
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "修复 kotlin 风格"
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}