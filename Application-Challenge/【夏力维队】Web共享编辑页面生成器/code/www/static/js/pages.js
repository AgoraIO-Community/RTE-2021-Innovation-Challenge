// Generated by CoffeeScript 1.12.7
(function() {
  var Hs, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.Hs || (root.Hs = {});

  Hs = root.Hs;

  $(function() {
    var load_pages_list, pages_search, pages_search_timeout, search_in_items;
    console.log("pages");
    $("body").on("click", ".add_new_page", function(evt) {
      return $.ajax({
        url: "/api/page/add",
        data: {
          title: $(".add_new_page_title").val(),
          desc: $(".add_new_page_desc").val()
        },
        dataType: 'json',
        type: 'POST',
        success: function(data) {
          var new_blank;
          console.log(JSON.stringify(data));
          load_pages_list();
          if (data.info === "ok") {
            new_blank = window.open('_blank');
            if (new_blank === null) {
              return window.location.href = "/home/page/edit/" + data.block_id;
            } else {
              return new_blank.location = "/home/page/edit/" + data.block_id;
            }
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    });
    load_pages_list = function() {
      $(".pages_top_list").empty();
      $(".pages_list").empty();
      return $.ajax({
        url: "/api/pages/list",
        data: {
          t: (new Date()).getTime()
        },
        dataType: 'json',
        type: 'GET',
        success: function(data) {
          var fork_from, fork_from_html, i, item, item_top, j, len, len1, ref, ref1, results;
          console.log(data);
          if (data.info === "ok") {
            localStorage.setItem("pages", JSON.stringify(data.result));
            localStorage.setItem("pages_top_ids", JSON.stringify(data.pages_top_ids));
            ref = data.result;
            for (i = 0, len = ref.length; i < len; i++) {
              item = ref[i];
              fork_from = item["fork_from"];
              fork_from_html = "";
              if (fork_from !== null) {
                fork_from_html = "<p class=\"fork_from\">forked from \n    <a target=\"_blank\" href=\"/home/page/" + fork_from + "\">\n        <span style=\"color:#0366d6;\">" + fork_from + "</span>\n    </a>\n</p>";
              }
              $(".pages_list").append("<div class=\"page_item\" data-block=\"" + item["block_id"] + "\">\n    <p class=\"block\">block: " + item["block_id"] + "</p>\n    <p class=\"title\">" + item["title"] + "</p>\n    " + fork_from_html + "\n    <p class=\"desc\">" + item["desc"] + "</p>\n    <div class=\"link_blank\">\n        <a target=\"_blank\" href=\"/home/page/edit/" + item["block_id"] + "\"><span class=\"page_edit\">Edit·编辑</span></a>\n        <a target=\"_blank\" href=\"/home/page/" + item["block_id"] + "\"><span class=\"page\">Page View·预览</span></a>\n        <span class=\"add_to_top\">Add to Top·置顶</span>\n        <span class=\"remove_to_trash\">Remove·移除</span>\n    </div>\n</div>");
            }
            if (data.pages_top_ids.length > 0) {
              $(".pages_top_list").removeClass("hide");
            }
            ref1 = data.pages_top_ids;
            results = [];
            for (j = 0, len1 = ref1.length; j < len1; j++) {
              item_top = ref1[j];
              $(".pages_top_list").append($(".page_item[data-block=" + item_top + "]"));
              $(".page_item[data-block=" + item_top + "]").find(".add_to_top").after("<span class=\"remove_from_top\">Remove from Top·取消置顶</span>");
              results.push($(".page_item[data-block=" + item_top + "]").find(".add_to_top").remove());
            }
            return results;
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    };
    load_pages_list();
    $("body").on("click", ".add_to_top", function(evt) {
      var block_id, dom;
      dom = $(this);
      block_id = dom.parents(".page_item").attr("data-block");
      return $.ajax({
        url: "/api/page/add_to_top",
        data: {
          aim_id: block_id
        },
        dataType: 'json',
        type: 'POST',
        success: function(data) {
          console.log(JSON.stringify(data));
          if (data.info === "ok") {
            $(".pages_top_list").removeClass("hide");
            $(".pages_top_list").prepend($(".page_item[data-block=" + block_id + "]"));
            $(".page_item[data-block=" + block_id + "]").find(".add_to_top").after("<span class=\"remove_from_top\">Remove from Top·取消置顶</span>");
            return $(".page_item[data-block=" + block_id + "]").find(".add_to_top").remove();
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    });
    $("body").on("click", ".remove_from_top", function(evt) {
      var block_id, dom;
      dom = $(this);
      block_id = dom.parents(".page_item").attr("data-block");
      return $.ajax({
        url: "/api/page/remove_from_top",
        data: {
          aim_id: block_id
        },
        dataType: 'json',
        type: 'POST',
        success: function(data) {
          console.log(JSON.stringify(data));
          if (data.info === "ok") {
            $(".pages_list").prepend($(".page_item[data-block=" + block_id + "]"));
            $(".page_item[data-block=" + block_id + "]").find(".remove_from_top").before("<span class=\"add_to_top\">Add to Top·置顶</span>");
            $(".page_item[data-block=" + block_id + "]").find(".remove_from_top").remove();
            if ($(".pages_top_list>.page_item").length < 1) {
              return $(".pages_top_list").addClass("hide");
            }
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    });
    $("body").on("click", ".pages_add_new_page_btn", function(evt) {
      if ($(".create_page_area").hasClass("hide")) {
        return $(".create_page_area").removeClass("hide");
      } else {
        return $(".create_page_area").addClass("hide");
      }
    });
    pages_search_timeout = null;
    $("body").on("input propertychange", ".pages_search_input", function(evt) {
      var search;
      search = $(this).val();
      clearTimeout(pages_search_timeout);
      return pages_search_timeout = setTimeout(function() {
        return pages_search(search);
      }, 1000);
    });
    search_in_items = function(from, items) {
      var i, item, len;
      from = from.toLocaleLowerCase();
      for (i = 0, len = items.length; i < len; i++) {
        item = items[i];
        if (from.indexOf(item) > -1) {
          return true;
        }
      }
      return false;
    };
    pages_search = function(search) {
      var _block_id, _desc, _fork_from, _title, has_page, i, len, page, pages, search_items;
      console.log("search: ", search);
      search = search.toLocaleLowerCase();
      search_items = search.split(" ");
      if (search === "") {
        $(".no_has_page").remove();
        $(".page_item").removeClass("hide");
        return;
      }
      $(".page_item").addClass("hide");
      pages = JSON.parse(localStorage.getItem("pages"));
      has_page = false;
      for (i = 0, len = pages.length; i < len; i++) {
        page = pages[i];
        _block_id = page["block_id"];
        _title = page["title"];
        _desc = page["desc"];
        _fork_from = page["fork_from"];
        if (_fork_from === null) {
          _fork_from = "";
        }
        if (search_in_items(_title, search_items)) {
          $(".page_item[data-block=" + _block_id + "]").removeClass("hide");
          has_page = true;
        }
        if (search_in_items(_desc, search_items)) {
          $(".page_item[data-block=" + _block_id + "]").removeClass("hide");
          has_page = true;
        }
        if (search_in_items(_block_id, search_items)) {
          $(".page_item[data-block=" + _block_id + "]").removeClass("hide");
          has_page = true;
        }
        if (search_in_items(_fork_from, search_items)) {
          $(".page_item[data-block=" + _block_id + "]").removeClass("hide");
          has_page = true;
        }
      }
      if (!has_page) {
        $(".no_has_page").remove();
        return $(".pages_tools_area").after("<div class=\"no_has_page\">0 Result here.<span class=\"remove_search_btn\">remove search</span></div>");
      } else {
        return $(".no_has_page").remove();
      }
    };
    $("body").on("click", ".remove_search_btn", function(evt) {
      $(".no_has_page").remove();
      $(".page_item").removeClass("hide");
      return $(".pages_search_input").val("");
    });
    return $("body").on("click", ".remove_to_trash", function(evt) {
      var block_id, dom;
      dom = $(this);
      block_id = dom.parents(".page_item").attr("data-block");
      return $.ajax({
        url: "/api/page/remove_to_trash",
        data: {
          aim_id: block_id
        },
        dataType: 'json',
        type: 'POST',
        success: function(data) {
          console.log(JSON.stringify(data));
          if (data.info === "ok") {
            return $(".page_item[data-block=" + block_id + "]").animate({
              "opacity": 0
            }, 1000, function() {
              return $(".page_item[data-block=" + block_id + "]").remove();
            });
          } else if (data.info === "error") {
            return alert(data.about);
          }
        },
        error: function(data) {
          return console.log(data);
        }
      });
    });
  });

}).call(this);
