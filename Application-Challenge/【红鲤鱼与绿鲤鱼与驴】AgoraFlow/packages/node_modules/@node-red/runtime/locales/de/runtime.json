{
    "runtime": {
        "welcome": "Willkommen bei Node-RED!",
        "version": "__component__ Version: __version__",
        "unsupported_version": "Nicht unterstützte Version von __component__. Erforderlich: __requires__, jedoch gefunden: __version__",
        "paths": {
            "settings": "Einstellungsdatei: __path__",
            "httpStatic": "HTTP-Statisch: __path__"
        }
    },

    "server": {
        "loading": "Paletten-Nodes werden geladen",
        "palette-editor": {
            "disabled": "Paletteneditor deaktiviert: Einstellungen",
            "npm-not-found": "Paletteneditor deaktiviert: Befehl 'npm' nicht gefunden",
            "npm-too-old": "Paletteneditor deaktiviert: npm-Version ist zu alt. Erforderlich: npm >= 3.x"
        },
        "errors": "Fehler beim Registrieren von __count__ Node-Type",
        "errors_plural": "Fehler beim Registrieren von __count__ Node-Typen",
        "errors-help": "Mit der Option -v ausführen, um weitere Details zu erfahren",
        "missing-modules": "Fehlende Node-Module:",
        "node-version-mismatch": "Das Node-Modul kann nicht in dieser Version geladen werden. Erforderlich: __version__",
        "type-already-registered": "Der Typ '__type__' ist bereits von Modul '__module__' registriert",
        "removing-modules": "Entferne Module aus der Konfiguration",
        "added-types": "Hinzugefügte Node-Typen:",
        "removed-types": "Entfernte Node-Typen:",
        "install": {
            "invalid": "Ungültiger Modulname",
            "installing": "Modul wird installiert: __name__, Version: __version__",
            "installed": "Installiertes Modul: __name__",
            "install-failed": "Installation fehlgeschlagen",
            "install-failed-long": "Installation des Moduls __name__ ist fehlgeschlagen:",
            "install-failed-not-found": "Das Modul $t(server.install.install-failed-long) wurde nicht gefunden",
            "install-failed-name": "$t(server.install.install-failed-long). Ungültiger Modulname: __name__",
            "install-failed-url": "$t(server.install.install-failed-long). Ungültige URL: __url__",
            "upgrading": "Upgrade von Modul __name__ auf Version __version__ gestartet",
            "upgraded": "Upgrade von Modul __name__ war erfolgreich. Neustart von Node-RED für die Verwendung der neuen Version erforderlich.",
            "upgrade-failed-not-found": "Upgrade fehlgeschlagen. $t(server.install.install-failed-long). Version nicht gefunden.",
            "uninstalling": "Das Modul __name__ wird deinstalliert",
            "uninstall-failed": "Deinstallation fehlgeschlagen",
            "uninstall-failed-long": "Die Deinstallation des Moduls __name__ ist fehlgeschlagen:",
            "uninstalled": "Das Modul __name__ ist deinstalliert"
        },
        "deprecatedOption": "Die Verwendung von __old__ ist abgekündigt. Stattdessen __new__ verwenden.",
        "unable-to-listen": "Überwachen (listen) von __listenpath__ nicht möglich",
        "port-in-use": "FEHLER: Port wird verwendet",
        "uncaught-exception": "Nicht abgefangene Ausnahmebedingung:",
        "admin-ui-disabled": "Administrator-Benutzeroberfläche deaktiv",
        "now-running": "Server wird jetzt auf __listenpath__ ausgeführt",
        "failed-to-start": "Starten des Servers fehlgeschlagen:",
        "headless-mode": "Server läuft im Headless-Modus",
        "httpadminauth-deprecated": "Die Verwendung von httpAdminAuth wird nicht weiter unterstützt. Verwenden Sie stattdessen adminAuth.",
        "https": {
            "refresh-interval": "Erneuerung der https-Einstellungen erfolgt alle __interval__ Stunden",
            "settings-refreshed": "https-Einstellungen wurden erneuert",
            "refresh-failed": "Erneuerung der https-Einstellungen fehlgeschlagen: __message__",
            "nodejs-version": "httpsRefreshInterval erfordert Node.js 11 or later",
            "function-required": "httpsRefreshInterval erfordert die https-Eigenschaft in Form einer Funktion"
        }
    },

    "api": {
        "flows": {
            "error-save": "Fehler beim Speichern der Flows: __message__",
            "error-reload": "Fehler beim erneuten Laden der Flows: __message__"
        },
        "library": {
            "error-load-entry": "Fehler beim Laden des Bibliothekseintrags '__path__': __message__",
            "error-save-entry": "Fehler beim Speichern des Bibliothekseintrags '__path__': __message__",
            "error-load-flow": "Fehler beim Laden des Flows '__path__': __message__",
            "error-save-flow": "Fehler beim Speichern des Flows '__path__': __message__"
        },
        "nodes": {
            "enabled": "Aktivierte Node-Typen:",
            "disabled": "Deaktivierte Node-Typen:",
            "error-enable": "Der Node konnte nicht aktiviert werden:"
        }
    },

    "comms": {
        "error": "Kommunikationskanal-Fehler: __message__",
        "error-server": "Kommunikationsserver-Fehler: __message__",
        "error-send": "Kommunikationsende-Fehler: __message__"
    },

    "settings": {
        "user-not-available": "Einstellungen konnten nicht gespeichert werden: __message__",
        "not-available": "Einstellungen nicht verfügbar",
        "property-read-only": "Die Eigenschaft '__prop__ 'ist schreibgeschützt"
    },
    "library": {
        "unknownLibrary": "Unbekannte Bibliothek (Library): __library__",
        "unknownType": "Unbekannter Bibliothekstyp (Library type): __type__",
        "readOnly": "Bibliothek (Library) __library__ ist nur lesbar",
        "failedToInit": "Fehler beim Initialisieren der Bibliothek (Library) __library__: __error__",
        "invalidProperty": "Ungültige Eigenschaft __prop__: '__value__'"
    },
    "nodes": {
        "credentials": {
            "error": "Fehler beim Laden der Berechtigungen: __message__",
            "error-saving": "Fehler beim Speichern der Berechtigungen: __message__",
            "not-registered": "Der Berechtigung-Typ '__type__' ist nicht registriert",
            "system-key-warning": "\n---------------------------------------------------------------------\nDie Datei mit den Flow-Berechtigungen wird mit einem vom System\ngenerierten Schlüssel verschlüsselt.\nWenn der vom System generierte Schlüssel aus irgendeinem Grund\nverloren geht, kann die Datei mit den Berechtigungen nicht\nwiederhergestellt werden. Sie muss dann gelöscht und die\nBerechtigungen müssen erneut eingestellt werden.\nEs sollte ein eigener Schlüssel mit Hilfe der Option\n'credentialSecret' in der Einstellungsdatei vorgegeben werden.\nNode-RED wird dann die Datei mit den Flow-Berechtigungen\nbei der nächsten Übernahme (deploy) einer Änderung erneut\nverschlüsseln.\n---------------------------------------------------------------------"
        },
        "flows": {
            "safe-mode": "Die Flows sind gestoppt im abgesicherten Modus. Übernahme (deploy) zum Starten.",
            "registered-missing": "Fehlender Typ registriert: __type__",
            "error": "Fehler beim Laden der Flows: __message__",
            "starting-modified-nodes": "Geänderte Nodes werden gestartet",
            "starting-modified-flows": "Geänderte Flows werden gestartet",
            "starting-flows": "Flows werden gestartet",
            "started-modified-nodes": "Geänderte Nodes sind gestartet",
            "started-modified-flows": "Geänderte Flows sind gestartet",
            "started-flows": "Flows sind gestartet",
            "stopping-modified-nodes": "Geänderte Nodes werden gestoppt",
            "stopping-modified-flows": "Geänderte Flows werden gestoppt",
            "stopping-flows": "Flows werden gestoppt",
            "stopped-modified-nodes": "Geänderte Nodes sind gestoppt",
            "stopped-modified-flows": "Geänderte Flows sind gestoppt",
            "stopped-flows": "Flows sind gestoppt",
            "stopped": "gestoppt",
            "stopping-error": "Fehler beim Stoppen des Nodes: __message__",
            "added-flow": "Flow wird hinzugefügt: __label__",
            "updated-flow": "Aktualisierter Flow: __label__",
            "removed-flow": "Entfernter Flow: __label__",
            "missing-types": "Warten auf Registrierung fehlender Typen:",
            "missing-type-provided": " - __type__ (wird vom npm-Modul __module__ bereitgestellt)",
            "missing-type-install-1": "Um die fehlenden Module zu installieren, ist zu starten:",
            "missing-type-install-2": "Im Verzeichnis:"
        },
        "flow": {
            "unknown-type": "Unbekannter Typ: __type__",
            "missing-types": "Fehlende Typen",
            "error-loop": "Maximale Anzahl der Meldungen überschritten"
        },
        "index": {
            "unrecognised-id": "Unbekannte ID: __id__",
            "type-in-use": "Typ in Verwendung: __msg__",
            "unrecognised-module": "Unbekanntes Modul: __module__"
        },
        "registry": {
            "localfilesystem": {
                "module-not-found": "Das Modul '__module__' wurde nicht gefunden"
            }
        }
    },

    "storage": {
        "index": {
            "forbidden-flow-name": "Unzulässiger Flow-Name"
        },
        "localfilesystem": {
            "user-dir": "Benutzerverzeichnis: __path__",
            "flows-file": "Flow-Datei: __path__",
            "create": "Neue '__type__'-Datei wird erstellt",
            "empty": "Vorhandene '__type__'-Datei ist leer",
            "invalid": "Vorhandene '__type__'-Datei enthält ungültigen JSON-Code",
            "restore": "Die '__type__'-Dateisicherung wird wiederhergestellt: __path__",
            "restore-fail": "Die Wiederherstellung der '__type__'-Dateisicherung ist fehlgeschlagen: __message__",
            "fsync-fail": "Die Übertragung der Datei __path__ auf das Laufwerk ist fehlgeschlagen: __message__",
            "projects": {
                "changing-project": "Aktives Projekt wird festgelegt: __project__",
                "active-project": "Aktives Projekt: __project__",
                "projects-directory": "Projektverzeichnis: __projectsDirectory__",
                "project-not-found": "Projekt nicht gefunden: __project__",
                "no-active-project": "Kein aktives Projekt: Es wird die Standarddatei für die Flows verwendet",
                "disabled": "Projekte deaktiviert: editorTheme.projects.enabled=false",
                "disabledNoFlag": "Projekte deaktiviert: Setze editorTheme.projects.enabled=true zum Aktivieren",
                "git-not-found": "Projekte deaktiviert: Git nicht gefunden",
                "git-version-old": "Projekte deaktiviert: Git __version__ wird nicht unterstützt. Erforderlich: V2.x",
                "summary": "Ein Node-RED-Projekt",
                "readme": "### Produktinfo\n\nDies ist die 'README.md'-Datei Ihres Projekts.\nSie hilft den Benutzern zu verstehen, was das Projekt macht,\nwie man es verwendet und enthält alles andere Wissenwerte dazu."
            }
        }
    },

    "context": {
        "log-store-init": "Kontextspeicher: __name__ [__info__]",
        "error-loading-module": "Fehler beim Laden des Kontextspeichers: __message__",
        "error-loading-module2": "Fehler beim Laden des Kontextspeichers '__module__': __message__",
        "error-module-not-defined": "Beim Kontextspeicher '__storage__' fehlt die 'module'-Option",
        "error-invalid-module-name": "Ungültiger Kontextspeichername: __name__",
        "error-invalid-default-module": "Standardkontextspeicher unbekannt: __storage__",
        "unknown-store": "Unbekannter Kontextspeicher '__name__ ' angegeben. Standard-Kontextspeicher wird verwendet.",
        "localfilesystem": {
            "invalid-json": "Ungültiger JSON-Code in Kontextspeicher-Datei '__file__'",
            "error-circular": "Der Kontext __scope__ enthält einen zirkulären Bezug, der nicht persistent gespeichert werden kann",
            "error-write": "Fehler beim Schreiben des Kontextes: __message__"
        }
    }

}
