def safeExtGet(prop, key, fallback) {
    if (rootProject.ext.has(prop)) {
        def map = rootProject.ext.get(prop)
        if (map.containsKey(key)) {
            return map.get(key)
        }
    }
    return fallback
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion safeExtGet('android', 'compileSdkVersion', 29)
    buildToolsVersion safeExtGet('android', 'buildToolsVersion', '29.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('android', 'minSdkVersion', 19)
        targetSdkVersion safeExtGet('android', 'minSdkVersion', 29)

        consumerProguardFiles 'consumer-rules.pro'

        buildConfigField 'String', 'API_BASE_URL', '"https://cloudcapiv4.herewhite.com/"'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':base')
    implementation project(':log')

    api "com.github.duty-os:white-sdk-android:${safeExtGet('dependencies', 'com.github.duty-os:white-sdk-android', '2.6.4')}"
}
